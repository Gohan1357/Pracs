import pygame
import random

# Initialize Pygame
pygame.init()

# Constants
WIDTH, HEIGHT = 640, 480
CELL_SIZE = 20
SNAKE_SPEED = 15

# Colors
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# Create the screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")

# Snake initial position
snake_head = [100, 50]
snake_body = [[100, 50], [90, 50], [80, 50]]
snake_direction = "RIGHT"
change_to = snake_direction

# Food initial position
food_pos = [random.randrange(1, (WIDTH//CELL_SIZE)) * CELL_SIZE,
            random.randrange(1, (HEIGHT//CELL_SIZE)) * CELL_SIZE]

# Score
score = 0

# Game Over flag
game_over = False

# Game over function
def game_over_screen():
    my_font = pygame.font.SysFont('times new roman', 90)
    game_over_surface = my_font.render('Your Score is: ' + str(score), True, WHITE)
    game_over_rect = game_over_surface.get_rect()
    game_over_rect.midtop = (WIDTH/2, HEIGHT/4)
    screen.fill(RED)
    screen.blit(game_over_surface, game_over_rect)
    pygame.display.flip()
    pygame.quit()
    quit()

# Main logic
while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                change_to = "UP"
            if event.key == pygame.K_DOWN:
                change_to = "DOWN"
            if event.key == pygame.K_LEFT:
                change_to = "LEFT"
            if event.key == pygame.K_RIGHT:
                change_to = "RIGHT"

    # Validate direction
    if change_to == "UP" and not snake_direction == "DOWN":
        snake_direction = "UP"
    if change_to == "DOWN" and not snake_direction == "UP":
        snake_direction = "DOWN"
    if change_to == "LEFT" and not snake_direction == "RIGHT":
        snake_direction = "LEFT"
    if change_to == "RIGHT" and not snake_direction == "LEFT":
        snake_direction = "RIGHT"

    # Move the snake
    if snake_direction == "UP":
        snake_head[1] -= CELL_SIZE
    if snake_direction == "DOWN":
        snake_head[1] += CELL_SIZE
    if snake_direction == "LEFT":
        snake_head[0] -= CELL_SIZE
    if snake_direction == "RIGHT":
        snake_head[0] += CELL_SIZE

    # Snake body growing mechanism
    snake_body.insert(0, list(snake_head))
    if snake_head[0] == food_pos[0] and snake_head[1] == food_pos[1]:
        score += 1
        food_pos = [random.randrange(1, (WIDTH//CELL_SIZE)) * CELL_SIZE,
                    random.randrange(1, (HEIGHT//CELL_SIZE)) * CELL_SIZE]
    else:
        snake_body.pop()

    # Game Over conditions
    if (snake_head[0] < 0 or snake_head[0] > WIDTH - CELL_SIZE
            or snake_head[1] < 0 or snake_head[1] > HEIGHT - CELL_SIZE):
        game_over = True
    for block in snake_body[1:]:
        if snake_head[0] == block[0] and snake_head[1] == block[1]:
            game_over = True

    # Background
    screen.fill((0, 0, 0))

    # Draw snake
    for pos in snake_body:
        pygame.draw.rect(screen, GREEN, pygame.Rect(pos[0], pos[1], CELL_SIZE, CELL_SIZE))

    # Draw food
    pygame.draw.rect(screen, RED, pygame.Rect(food_pos[0], food_pos[1], CELL_SIZE, CELL_SIZE))

    # Score
    my_font = pygame.font.SysFont('times new roman', 18)
    score_surface = my_font.render('Score: ' + str(score), True, WHITE)
    score_rect = score_surface.get_rect()
    score_rect.midtop = (WIDTH/10, 15)
    screen.blit(score_surface, score_rect)
    pygame.display.update()

    # Refresh game screen
    pygame.display.update()

    # Control game speed
    pygame.time.Clock().tick(SNAKE_SPEED)

# Show game over screen
game_over_screen()
